apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels: {{- include "mongodb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mongodb.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        {{- include "mongodb.labels" . | nindent 8 }}
        app: mongodb
    spec:
      containers:
      - name: mongod
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["--bind_ip_all"]
        ports:
          - name: mongo
            containerPort: 27017
        readinessProbe:
          tcpSocket: { port: 27017 }
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket: { port: 27017 }
          initialDelaySeconds: 10
          periodSeconds: 10
        resources: {{- toYaml .Values.resources.mongod | nindent 10 }}
        volumeMounts:
          - name: data
            mountPath: /data/db
      - name: mongodb-exporter
        image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}"
        imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
        args:
          - "--mongodb.uri=mongodb://127.0.0.1:27017"
          - "--compatible-mode"
          - "--collect-all"
          - "--discovering-mode"
          - "--log.level=debug"
        ports:
          - name: metrics
            containerPort: 9216
        readinessProbe:
          httpGet: { path: /metrics, port: metrics }
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet: { path: /metrics, port: metrics }
          initialDelaySeconds: 10
          periodSeconds: 20
        resources: {{- toYaml .Values.resources.exporter | nindent 10 }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  {{- end }}